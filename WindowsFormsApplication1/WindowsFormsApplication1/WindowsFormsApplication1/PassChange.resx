<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HwAAAABJRU5ErkJggg==
</value>
  </data>
</root>